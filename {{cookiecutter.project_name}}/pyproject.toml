[project]
name = "{{cookiecutter.project_name}}"
version = "{{cookiecutter.version}}"
authors = [
    {name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}"}
]
description = "{{cookiecutter.description}}"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "pytest",
    "pydantic_settings",
    "tomlkit",
    "json_log_formatter",
    "ujson",
]

[tool.ruff]
target-version = "py38"
line-length = 79
extend-select = [
    # https://beta.ruff.rs/docs/rules
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "I", # isort
    "RUF",
    "UP",  # pyupgrade
    "PGH004", # Use specific rule codes when using `noqa`
    "B", # bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ERA", # eradicate
    "PT", # flake-8-pytest-style
    "C90", # mccabe
    "N", # pep8-naming
    "COM", # flake8-commas
    "Q", # flake8-quotes
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "TD", # flake8-todos as we will use this for stats
    "FIX", # flake8-fixme
    "AIR", # Airflow lint
    "F", # Pyflakes
    "TCH", # flake8-type-checking
    # "D", # pydoc-style
]
ignore = [
    "RUF007", "E501",
    "TD003", # todos having links to issues
    "FIX002", # don't fail on todos only fix
    "Q000",
    "PT009",
    "B008",
    "COM812" # trailing comma, to make the Ruff formatter happy
]
task-tags = ["TODO", "FIXME"]
output-format = "grouped"
show-source = true

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"